<StackPanel x:Class="Ann.SettingWindow.SettingPage.FileOrFolderListBox"
            xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
            xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
            xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
            xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
            xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
            xmlns:settingPage="clr-namespace:Ann.SettingWindow.SettingPage"
            d:DesignHeight="300"
            d:DesignWidth="300"
            Grid.IsSharedSizeScope="True"
            mc:Ignorable="d">
    <StackPanel.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Button.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.ListBox.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.TextBox.xaml" />
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </StackPanel.Resources>

    <ListBox HorizontalContentAlignment="Stretch" ItemsSource="{Binding Items, Mode=OneWay, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type settingPage:FileOrFolderListBox}}}">
        <ListBox.ItemTemplate>
            <DataTemplate DataType="settingPage:PathViewModel">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>

                    <Button Grid.Column="0" Command="{Binding FolderSelectDialogOpenCommand, Mode=OneTime}">
                        <materialDesign:PackIcon Margin="0" Padding="0">
                            <materialDesign:PackIcon.Style>
                                <Style TargetType="{x:Type materialDesign:PackIcon}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding IsFolderPicker, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type settingPage:FileOrFolderListBox}}}" Value="True">
                                            <Setter Property="Kind" Value="Folder" />
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding IsFolderPicker, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type settingPage:FileOrFolderListBox}}}" Value="False">
                                            <Setter Property="Kind" Value="File" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </materialDesign:PackIcon.Style>
                        </materialDesign:PackIcon>

                        <Button.Style>
                            <Style BasedOn="{StaticResource MaterialDesignToolForegroundButton}" TargetType="{x:Type Button}" />
                        </Button.Style>
                    </Button>

                    <TextBox Grid.Column="1"
                             Margin="0"
                             Text="{Binding Path.Value}">
                        <TextBox.Style>
                            <Style BasedOn="{StaticResource MaterialDesignTextBox}" TargetType="{x:Type TextBox}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding IsFolderPicker, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type settingPage:FileOrFolderListBox}}}" Value="True">
                                        <Setter Property="materialDesign:HintAssist.Hint" Value="Folder" />
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding IsFolderPicker, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type settingPage:FileOrFolderListBox}}}" Value="False">
                                        <Setter Property="materialDesign:HintAssist.Hint" Value="File" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBox.Style>
                    </TextBox>

                    <Button Grid.Column="2"
                            Command="{Binding RemoveCommand,
                                              RelativeSource={RelativeSource FindAncestor,
                                                                             AncestorType={x:Type settingPage:FileOrFolderListBox}}}"
                            CommandParameter="{Binding}">
                        <materialDesign:PackIcon Kind="Delete" />

                        <Button.Style>
                            <Style BasedOn="{StaticResource MaterialDesignToolForegroundButton}" TargetType="{x:Type Button}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding IsMouseOver, RelativeSource={RelativeSource AncestorType=ListBoxItem}}" Value="True">
                                        <Setter Property="Visibility" Value="Visible" />
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding IsMouseOver, RelativeSource={RelativeSource AncestorType=ListBoxItem}}" Value="False">
                                        <Setter Property="Visibility" Value="Collapsed" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                    </Button>
                </Grid>
            </DataTemplate>
        </ListBox.ItemTemplate>

        <ListBox.ItemContainerStyle>
            <Style TargetType="{x:Type ListBoxItem}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ContentControl}">
                            <ContentPresenter />
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </ListBox.ItemContainerStyle>
    </ListBox>

    <Button HorizontalAlignment="Left"
            HorizontalContentAlignment="Left"
            Command="{Binding AddCommand,
                              RelativeSource={RelativeSource FindAncestor,
                                                             AncestorType={x:Type settingPage:FileOrFolderListBox}}}"
            Content="{Binding AddButtonText,
                              RelativeSource={RelativeSource FindAncestor,
                                                             AncestorType={x:Type settingPage:FileOrFolderListBox}}}">
        <Button.Style>
            <Style BasedOn="{StaticResource MaterialDesignFlatButton}" TargetType="{x:Type Button}">
                <Setter Property="Margin" Value="0" />
                <Setter Property="Padding" Value="0" />
            </Style>
        </Button.Style>
    </Button>
</StackPanel>
