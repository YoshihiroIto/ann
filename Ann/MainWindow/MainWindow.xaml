<Window x:Class="Ann.MainWindow.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:behavior="clr-namespace:Ann.Foundation.Control.Behavior;assembly=Ann.Foundation"
        xmlns:core="clr-namespace:Ann.Core;assembly=Ann.Core"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        xmlns:interactivity="clr-namespace:Reactive.Bindings.Interactivity;assembly=ReactiveProperty.NET46"
        xmlns:mainWindow="clr-namespace:Ann.MainWindow"
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        Width="600"
        d:DataContext="{d:DesignData mainWindow:MainWindowViewModel}"
        Activated="Window_Activated"
        AllowsTransparency="True"
        Background="#9000"
        BorderBrush="#C000"
        BorderThickness="1"
        FontFamily="pack://application:,,,/MaterialDesignThemes.Wpf;component/Resources/Roboto/#Roboto"
        IsVisibleChanged="Window_IsVisibleChanged"
        Left="{Binding Left.Value,
                       Mode=TwoWay}"
        Loaded="Window_Loaded"
        MouseLeftButtonDown="Window_MouseLeftButtonDown"
        ResizeMode="NoResize"
        ShowInTaskbar="False"
        SizeToContent="Height"
        SnapsToDevicePixels="True"
        TextOptions.TextFormattingMode="Ideal"
        TextOptions.TextRenderingMode="Auto"
        Top="{Binding Top.Value,
                      Mode=TwoWay}"
        WindowStyle="None"
        mc:Ignorable="d">
    <i:Interaction.Behaviors>
        <behavior:WindowTaskTrayIconBehavior IconSource="/app.ico"
                                             LeftClickedCommand="{Binding ShowCommand,
                                                                          Mode=OneTime}"
                                             ToolTipText="{Binding Caption,
                                                                   Mode=OneTime}">
            <behavior:WindowTaskTrayIconBehavior.ContextMenu>
                <ContextMenu>
                    <MenuItem Command="{Binding IndexUpdateCommand, Mode=OneTime}" Header="{DynamicResource MenuItem_UpdateIndex}" />
                    <MenuItem Command="{Binding SettingShowCommand, Mode=OneTime}" Header="{DynamicResource MenuItem_Settings}" />
                    <Separator Margin="-100,8,-100,8" />
                    <MenuItem Command="{Binding ExitCommand, Mode=OneTime}" Header="{DynamicResource MenuItem_Exit}" />
                </ContextMenu>
            </behavior:WindowTaskTrayIconBehavior.ContextMenu>
        </behavior:WindowTaskTrayIconBehavior>

        <behavior:WindowDisposeDataContextOnClosedBehavior />
    </i:Interaction.Behaviors>

    <i:Interaction.Triggers>
        <i:EventTrigger EventName="ContentRendered">
            <interactivity:EventToReactiveCommand Command="{Binding InitializeCommand, Mode=OneTime}" />
        </i:EventTrigger>
    </i:Interaction.Triggers>

    <DockPanel LastChildFill="True">
        <StackPanel Margin="16" DockPanel.Dock="Top">
            <DockPanel LastChildFill="True">
                <materialDesign:PopupBox Margin="0,0,-12,0"
                                         Closed="PopupBox_Closed"
                                         DockPanel.Dock="Right"
                                         Foreground="Gainsboro"
                                         PlacementMode="BottomAndAlignRightEdges">
                    <StackPanel Margin="0,8">
                        <MenuItem Command="{Binding IndexUpdateCommand, Mode=OneTime}" Header="{DynamicResource MenuItem_UpdateIndex}" />
                        <MenuItem Command="{Binding SettingShowCommand, Mode=OneTime}" Header="{DynamicResource MenuItem_Settings}" />
                        <Separator />
                        <MenuItem Command="{Binding ExitCommand, Mode=OneTime}" Header="{DynamicResource MenuItem_Exit}" />
                    </StackPanel>
                </materialDesign:PopupBox>

                <TextBox x:Name="InputTextBox"
                         Background="Transparent"
                         BorderThickness="0"
                         CaretBrush="White"
                         FontSize="32"
                         Foreground="White"
                         Text="{Binding Input.Value,
                                        Mode=TwoWay,
                                        UpdateSourceTrigger=PropertyChanged}">
                    <TextBox.InputBindings>
                        <KeyBinding Key="Up"
                                    Command="{Binding SelectedCandidateMoveCommand,
                                                      Mode=OneTime}"
                                    CommandParameter="-1" />
                        <KeyBinding Key="Down"
                                    Command="{Binding SelectedCandidateMoveCommand,
                                                      Mode=OneTime}"
                                    CommandParameter="1" />

                        <KeyBinding Key="Tab"
                                    Command="{Binding SelectedCandidateMoveCommand,
                                                      Mode=OneTime}"
                                    CommandParameter="-1"
                                    Modifiers="Shift" />
                        <KeyBinding Key="Tab"
                                    Command="{Binding SelectedCandidateMoveCommand}"
                                    CommandParameter="1" />
                    </TextBox.InputBindings>
                </TextBox>
            </DockPanel>

            <ItemsControl MaxHeight="{Binding CandidatesListMaxHeight.Value,
                                              Mode=OneWay}"
                          Margin="0,16,0,0"
                          HorizontalContentAlignment="Stretch"
                          Background="Transparent"
                          BorderThickness="0"
                          Focusable="False"
                          IsTabStop="False"
                          ItemsSource="{Binding Candidates.Value,
                                                Mode=OneWay}"
                          VirtualizingPanel.IsVirtualizing="True"
                          VirtualizingPanel.ScrollUnit="Item"
                          VirtualizingPanel.VirtualizationMode="Recycling">
                <ItemsControl.Template>
                    <ControlTemplate>
                        <ItemsPresenter />
                    </ControlTemplate>
                </ItemsControl.Template>

                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <VirtualizingStackPanel CanVerticallyScroll="False" Orientation="Vertical" />
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>

                <ItemsControl.Style>
                    <Style TargetType="{x:Type ItemsControl}">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Candidates.Value, Mode=OneWay}" Value="{x:Null}">
                                <Setter Property="Visibility" Value="Collapsed" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Candidates.Value.Count, Mode=OneWay}" Value="0">
                                <Setter Property="Visibility" Value="Collapsed" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </ItemsControl.Style>

                <ItemsControl.ItemTemplate>
                    <DataTemplate DataType="{x:Type mainWindow:ExecutableUnitViewModel}">
                        <Canvas Width="566"
                                Height="64"
                                MouseLeftButtonDown="Grid_MouseLeftButtonDown">
                            <Canvas.Style>
                                <Style TargetType="{x:Type Canvas}">
                                    <Style.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="Background" Value="{StaticResource Item.MouseOver.Background}" />
                                        </Trigger>

                                        <DataTrigger Binding="{Binding IsSelected}" Value="True">
                                            <Setter Property="Background" Value="{StaticResource Item.SelectedActive.Background}" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Canvas.Style>

                            <Button Canvas.Right="4"
                                    Canvas.Bottom="0"
                                    VerticalAlignment="Bottom"
                                    materialDesign:RippleAssist.IsCentered="True"
                                    Focusable="False"
                                    IsTabStop="False">
                                <materialDesign:PackIcon Kind="Star" />
                                <Button.Style>
                                    <Style BasedOn="{StaticResource MaterialDesignToolButton}" TargetType="{x:Type Button}">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding IsPriorityFile, Mode=OneWay}" Value="True">
                                                <Setter Property="Foreground" Value="Yellow" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding IsPriorityFile, Mode=OneWay}" Value="False">
                                                <Setter Property="Foreground" Value="#888" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Button.Style>

                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="Click">
                                        <interactivity:EventToReactiveCommand Command="{Binding IsPriorityFileFlipCommand, Mode=OneTime}" />
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                            </Button>

                            <materialDesign:PopupBox Canvas.Right="18"
                                                     Canvas.Bottom="3"
                                                     Closed="PopupBox_Closed"
                                                     DockPanel.Dock="Right"
                                                     Foreground="Gainsboro"
                                                     PlacementMode="BottomAndAlignRightEdges"
                                                     PreviewMouseLeftButtonUp="PopupBox_PreviewMouseLeftButtonUp">
                                <StackPanel>
                                    <!--  ReSharper disable once Xaml.BindingWithContextNotResolved  -->
                                    <Button Command="{Binding DataContext.RunCommand,
                                                              RelativeSource={RelativeSource AncestorType=Window},
                                                              Mode=OneWay}"
                                            CommandParameter="admin"
                                            Content="{DynamicResource MenuItem_RunAsAdministrator}" />

                                    <!--  ReSharper disable once Xaml.BindingWithContextNotResolved  -->
                                    <Button Command="{Binding DataContext.ContainingFolderOpenCommand, RelativeSource={RelativeSource AncestorType=Window}, Mode=OneWay}" Content="{DynamicResource MenuItem_OpenContainingFolder}" />
                                </StackPanel>

                                <materialDesign:PopupBox.Style>
                                    <Style TargetType="{x:Type materialDesign:PopupBox}">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding IsMouseOver, RelativeSource={RelativeSource AncestorType=Canvas}}" Value="True">
                                                <Setter Property="Visibility" Value="Visible" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding IsMouseOver, RelativeSource={RelativeSource AncestorType=Canvas}}" Value="False">
                                                <Setter Property="Visibility" Value="Collapsed" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </materialDesign:PopupBox.Style>
                            </materialDesign:PopupBox>

                            <Rectangle Canvas.Left="0"
                                       Canvas.Top="0"
                                       Width="566"
                                       Height="1"
                                       Fill="#20A0A0A0"
                                       SnapsToDevicePixels="True" />

                            <Image Canvas.Left="8"
                                   Canvas.Top="8"
                                   Width="{x:Static core:Constants.IconSize}"
                                   Height="{x:Static core:Constants.IconSize}"
                                   Source="{Binding Icon,
                                                    Mode=OneWay}" />

                            <TextBlock Canvas.Left="64"
                                       Canvas.Top="8"
                                       Width="460"
                                       Height="30"
                                       FontSize="24"
                                       Foreground="White"
                                       Padding="0"
                                       Text="{Binding Name,
                                                      Mode=OneWay}"
                                       TextTrimming="CharacterEllipsis"
                                       ToolTip="{Binding Name,
                                                         Mode=OneWay}" />

                            <TextBlock Canvas.Left="64"
                                       Canvas.Top="42"
                                       Width="460"
                                       Height="16"
                                       Foreground="#AAA"
                                       Padding="0"
                                       Text="{Binding Path,
                                                      Mode=OneWay}"
                                       TextTrimming="CharacterEllipsis"
                                       ToolTip="{Binding Path,
                                                         Mode=OneWay}" />
                        </Canvas>
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
            </ItemsControl>
        </StackPanel>

        <mainWindow:StatusBar DataContext="{Binding StatusBar, Mode=OneTime}" />
    </DockPanel>
</Window>
