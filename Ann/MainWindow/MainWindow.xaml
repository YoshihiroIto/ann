<Window x:Class="Ann.MainWindow.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:behavior="clr-namespace:Ann.Foundation.Control.Behavior;assembly=Ann.Foundation"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        xmlns:interactivity="clr-namespace:Reactive.Bindings.Interactivity;assembly=ReactiveProperty.NET46"
        xmlns:mainWindow="clr-namespace:Ann.MainWindow"
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        Width="600"
        d:DataContext="{d:DesignData mainWindow:MainWindowViewModel}"
        Activated="Window_Activated"
        AllowsTransparency="True"
        Background="#9000"
        BorderBrush="#C000"
        BorderThickness="1"
        FontFamily="pack://application:,,,/MaterialDesignThemes.Wpf;component/Resources/Roboto/#Roboto"
        IsVisibleChanged="Window_IsVisibleChanged"
        Left="{Binding Left.Value,
                       Mode=TwoWay}"
        Loaded="Window_Loaded"
        MouseLeftButtonDown="Window_MouseLeftButtonDown"
        ResizeMode="NoResize"
        ShowInTaskbar="False"
        SizeToContent="Height"
        SnapsToDevicePixels="True"
        TextOptions.TextFormattingMode="Ideal"
        TextOptions.TextRenderingMode="Auto"
        Top="{Binding Top.Value,
                      Mode=TwoWay}"
        WindowStyle="None"
        mc:Ignorable="d">
    <i:Interaction.Behaviors>
        <behavior:WindowTaskTrayIconBehavior IconSource="/app.ico"
                                             LeftClickedCommand="{Binding ShowCommand,
                                                                          Mode=OneTime}"
                                             ToolTipText="{Binding Caption,
                                                                   Mode=OneTime}">
            <behavior:WindowTaskTrayIconBehavior.ContextMenu>
                <ContextMenu>
                    <MenuItem Command="{Binding IndexUpdateCommand, Mode=OneTime}" Header="{DynamicResource MenuItem_UpdateIndex}" />
                    <MenuItem Command="{Binding SettingShowCommand, Mode=OneTime}" Header="{DynamicResource MenuItem_Settings}" />
                    <Separator Margin="-100,8,-100,8" />
                    <MenuItem Command="{Binding ExitCommand, Mode=OneTime}" Header="{DynamicResource MenuItem_Exit}" />
                </ContextMenu>
            </behavior:WindowTaskTrayIconBehavior.ContextMenu>
        </behavior:WindowTaskTrayIconBehavior>

        <behavior:WindowDisposeDataContextOnClosedBehavior />
    </i:Interaction.Behaviors>

    <i:Interaction.Triggers>
        <i:EventTrigger EventName="ContentRendered">
            <interactivity:EventToReactiveCommand Command="{Binding InitializeCommand, Mode=OneTime}" />
        </i:EventTrigger>
    </i:Interaction.Triggers>

    <StackPanel>
        <DockPanel LastChildFill="True" Margin="16">
            <materialDesign:PopupBox Margin="0,0,-12,0"
                                     Closed="PopupBox_Closed"
                                     DockPanel.Dock="Right"
                                     Foreground="Gainsboro"
                                     PlacementMode="BottomAndAlignRightEdges">
                <StackPanel Margin="0,8">
                    <MenuItem Command="{Binding IndexUpdateCommand, Mode=OneTime}" Header="{DynamicResource MenuItem_UpdateIndex}" />
                    <MenuItem Command="{Binding SettingShowCommand, Mode=OneTime}" Header="{DynamicResource MenuItem_Settings}" />
                    <Separator />
                    <MenuItem Command="{Binding ExitCommand, Mode=OneTime}" Header="{DynamicResource MenuItem_Exit}" />
                </StackPanel>
            </materialDesign:PopupBox>

            <TextBox x:Name="InputTextBox"
                     Background="Transparent"
                     BorderThickness="0"
                     CaretBrush="White"
                     FontSize="32"
                     Foreground="White"
                     Text="{Binding Input.Value,
                                    Mode=TwoWay,
                                    UpdateSourceTrigger=PropertyChanged}">
                <TextBox.InputBindings>
                    <KeyBinding Key="Up"
                                Command="{Binding SelectedCandidateMoveCommand,
                                                  Mode=OneTime}"
                                CommandParameter="-1" />
                    <KeyBinding Key="Down"
                                Command="{Binding SelectedCandidateMoveCommand,
                                                  Mode=OneTime}"
                                CommandParameter="1" />

                    <KeyBinding Key="Tab"
                                Command="{Binding SelectedCandidateMoveCommand,
                                                  Mode=OneTime}"
                                CommandParameter="-1"
                                Modifiers="Shift" />
                    <KeyBinding Key="Tab"
                                Command="{Binding SelectedCandidateMoveCommand}"
                                CommandParameter="1" />
                </TextBox.InputBindings>
            </TextBox>
        </DockPanel>

        <Canvas x:Name="ExecutableUnitsPanel"
                Width="566"
                Margin="0,0,0,16"
                >
            <Canvas.Style>
                <Style TargetType="{x:Type Canvas}">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding Candidates.Value, Mode=OneWay}" Value="{x:Null}">
                            <Setter Property="Visibility" Value="Collapsed" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Candidates.Value.Count, Mode=OneWay}" Value="0">
                            <Setter Property="Visibility" Value="Collapsed" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Canvas.Style>
        </Canvas>

        <mainWindow:StatusBar DataContext="{Binding StatusBar, Mode=OneTime}" />
    </StackPanel>
</Window>
