<Window x:Class="Ann.MainWindow.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:ann="clr-namespace:Ann"
        xmlns:behaviors="http://schemas.livet-mvvm.net/2011/wpf"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        xmlns:interactivity="clr-namespace:Reactive.Bindings.Interactivity;assembly=ReactiveProperty.NET46"
        xmlns:mainWindow="clr-namespace:Ann.MainWindow"
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:settingWindow="clr-namespace:Ann.SettingWindow"
        xmlns:tb="http://www.hardcodet.net/taskbar"
        Width="600"
        d:DataContext="{d:DesignData mainWindow:MainWindowViewModel}"
        AllowsTransparency="True"
        Background="#9000"
        BorderBrush="#C000"
        BorderThickness="1"
        FontFamily="pack://application:,,,/MaterialDesignThemes.Wpf;component/Resources/Roboto/#Roboto"
        Left="{Binding Left.Value,
                       Mode=TwoWay}"
        Loaded="Window_Loaded"
        MouseLeftButtonDown="Window_MouseLeftButtonDown"
        ResizeMode="NoResize"
        ShowInTaskbar="False"
        SizeToContent="Height"
        SnapsToDevicePixels="True"
        TextOptions.TextFormattingMode="Ideal"
        TextOptions.TextRenderingMode="Auto"
        Top="{Binding Top.Value,
                      Mode=TwoWay}"
        Topmost="True"
        Visibility="{Binding Visibility.Value,
                             Mode=TwoWay}"
        WindowStyle="None"
        mc:Ignorable="d">
    <Window.Resources>
        <ResourceDictionary>
            <Style TargetType="ListBoxItem">
                <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                <Setter Property="VerticalContentAlignment" Value="Stretch" />
            </Style>

            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Button.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.PopupBox.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Menu.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.ToggleButton.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.ProgressBar.xaml" />
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </Window.Resources>

    <Window.InputBindings>
        <KeyBinding Key="Enter" Command="{Binding RunCommand, Mode=OneTime}" />
        <KeyBinding Key="Escape" Command="{Binding AppHideCommand, Mode=OneTime}" />
        <KeyBinding Key="J"
                    Command="{Binding AppHideCommand,
                                      Mode=OneTime}"
                    Modifiers="Control" />
    </Window.InputBindings>

    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Closed">
            <behaviors:DataContextDisposeAction />
        </i:EventTrigger>

        <behaviors:InteractionMessageTrigger MessageKey="WindowAction" Messenger="{Binding Messenger, Mode=OneTime}">
            <behaviors:WindowInteractionMessageAction InvokeActionOnlyWhenWindowIsActive="False" />
        </behaviors:InteractionMessageTrigger>

        <behaviors:InteractionMessageTrigger MessageKey="ShowSetting" Messenger="{Binding Messenger, Mode=OneWay}">
            <behaviors:TransitionInteractionMessageAction InvokeActionOnlyWhenWindowIsActive="False"
                                                          Mode="Modal"
                                                          WindowType="{x:Type settingWindow:SettingWindow}" />
        </behaviors:InteractionMessageTrigger>
    </i:Interaction.Triggers>

    <Grid Margin="16">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*" />
            <ColumnDefinition Width="Auto" />
            <ColumnDefinition Width="Auto" />
            <ColumnDefinition Width="Auto" />
        </Grid.ColumnDefinitions>

        <tb:TaskbarIcon IconSource="/app.ico"
                        MenuActivation="RightClick"
                        ToolTipText="Ann"
                        Visibility="Visible">
            <tb:TaskbarIcon.ContextMenu>
                <ContextMenu>
                    <MenuItem Command="{Binding IndexUpdateCommand, Mode=OneTime}" Header="Update Index" />
                    <MenuItem Command="{Binding SettingShowCommand, Mode=OneTime}" Header="Settings..." />
                    <Separator />
                    <MenuItem Command="{Binding AppExitCommand, Mode=OneTime}" Header="Exit" />
                </ContextMenu>
            </tb:TaskbarIcon.ContextMenu>
        </tb:TaskbarIcon>

        <TextBox x:Name="InputTextBox"
                 Grid.Row="0"
                 Grid.Column="0"
                 Background="Transparent"
                 BorderThickness="0"
                 CaretBrush="White"
                 FontSize="32"
                 Foreground="White"
                 Text="{Binding Input.Value,
                                Mode=TwoWay,
                                UpdateSourceTrigger=PropertyChanged}">
            <TextBox.InputBindings>
                <KeyBinding Key="Up"
                            Command="{Binding SelectedCandidateMoveCommand,
                                              Mode=OneTime}"
                            CommandParameter="-1" />
                <KeyBinding Key="Down"
                            Command="{Binding SelectedCandidateMoveCommand,
                                              Mode=OneTime}"
                            CommandParameter="1" />

                <KeyBinding Key="Tab"
                            Command="{Binding SelectedCandidateMoveCommand,
                                              Mode=OneTime}"
                            CommandParameter="-1"
                            Modifiers="Shift" />
                <KeyBinding Key="Tab"
                            Command="{Binding SelectedCandidateMoveCommand}"
                            CommandParameter="1" />
            </TextBox.InputBindings>
        </TextBox>

        <ProgressBar Grid.Row="0"
                     Grid.Column="1"
                     Margin="12,0,0,0"
                     HorizontalAlignment="Right"
                     VerticalAlignment="Center"
                     Foreground="White"
                     IsIndeterminate="True"
                     ToolTip="Index Updating..."
                     Value="0">
            <ProgressBar.Style>
                <Style BasedOn="{StaticResource MaterialDesignCircularProgressBar}" TargetType="{x:Type ProgressBar}">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding IsIndexUpdating.Value, Mode=OneWay}" Value="True">
                            <Setter Property="Visibility" Value="Visible" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding IsIndexUpdating.Value, Mode=OneWay}" Value="False">
                            <Setter Property="Visibility" Value="Collapsed" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </ProgressBar.Style>
        </ProgressBar>

        <Button Grid.Row="0"
                Grid.Column="2"
                Width="24"
                Height="24"
                HorizontalAlignment="Right"
                VerticalAlignment="Center"
                Command="{Binding IndexUpdateCommand,
                                  Mode=OneTime}"
                Padding="0"
                ToolTip="Index not found. Please update index.">
            <materialDesign:PackIcon Width="24"
                                     Height="24"
                                     Foreground="DeepPink"
                                     Kind="AlertOutline" />
            <Button.Style>
                <Style BasedOn="{StaticResource MaterialDesignFlatButton}" TargetType="{x:Type Button}">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding IsEnabledIndex.Value, Mode=OneWay}" Value="True">
                            <Setter Property="Visibility" Value="Collapsed" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding IsIndexUpdating.Value, Mode=OneWay}" Value="True">
                            <Setter Property="Visibility" Value="Collapsed" />
                        </DataTrigger>

                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsEnabledIndex.Value, Mode=OneWay}" Value="False" />
                                <Condition Binding="{Binding IsIndexUpdating.Value, Mode=OneWay}" Value="False" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Visibility" Value="Visible" />
                        </MultiDataTrigger>
                    </Style.Triggers>
                </Style>
            </Button.Style>
        </Button>

        <materialDesign:PopupBox Grid.Row="0"
                                 Grid.Column="3"
                                 Margin="0,0,-12,0"
                                 Closed="PopupBox_Closed"
                                 Foreground="White"
                                 PlacementMode="BottomAndAlignRightEdges">
            <StackPanel>
                <Button Command="{Binding IndexUpdateCommand, Mode=OneTime}" Content="Update Index" />
                <Button Command="{Binding SettingShowCommand, Mode=OneTime}" Content="Settings..." />
                <Separator Style="{StaticResource MaterialDesignSeparator}" />
                <Button Command="{Binding AppExitCommand, Mode=OneTime}" Content="Exit" />
            </StackPanel>
        </materialDesign:PopupBox>

        <ListBox Grid.Row="1"
                 Grid.Column="0"
                 Grid.ColumnSpan="4"
                 MaxHeight="{Binding CandidatesListMaxHeight.Value,
                                     Mode=OneWay}"
                 Margin="0,16,0,0"
                 HorizontalContentAlignment="Stretch"
                 Background="Transparent"
                 BorderThickness="0"
                 Focusable="False"
                 IsTabStop="False"
                 ItemsSource="{Binding Candidates.Value,
                                       Mode=OneWay}"
                 ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                 SelectedItem="{Binding SelectedCandidate.Value,
                                        Mode=TwoWay}"
                 SelectionChanged="ListBox_SelectionChanged"
                 SelectionMode="Single"
                 VirtualizingPanel.IsVirtualizing="True"
                 VirtualizingPanel.ScrollUnit="Item"
                 VirtualizingPanel.VirtualizationMode="Recycling">
            <ListBox.ItemsPanel>
                <ItemsPanelTemplate>
                    <VirtualizingStackPanel />
                </ItemsPanelTemplate>
            </ListBox.ItemsPanel>

            <ListBox.Style>
                <Style TargetType="{x:Type ListBox}">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding Candidates.Value, Mode=OneWay}" Value="{x:Null}">
                            <Setter Property="Visibility" Value="Collapsed" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Candidates.Value.Count, Mode=OneWay}" Value="0">
                            <Setter Property="Visibility" Value="Collapsed" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </ListBox.Style>

            <ListBox.ItemContainerStyle>
                <Style BasedOn="{StaticResource CandidateListBoxItemStyle}" TargetType="{x:Type ListBoxItem}">
                    <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                    <Setter Property="VerticalContentAlignment" Value="Stretch" />
                </Style>
            </ListBox.ItemContainerStyle>

            <ListBox.ItemTemplate>
                <DataTemplate DataType="{x:Type mainWindow:ExecutableUnitViewModel}">
                    <Grid MouseLeftButtonDown="Grid_MouseLeftButtonDown" SizeChanged="Grid_SizeChanged">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>

                        <Image Grid.Column="0"
                               Width="{x:Static ann:Constants.IconSize}"
                               Height="{x:Static ann:Constants.IconSize}"
                               Margin="4"
                               Source="{Binding Icon,
                                                Mode=OneWay}" />

                        <Grid Grid.Column="1"
                              Margin="0,4"
                              VerticalAlignment="Center">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>

                            <TextBlock Grid.Row="0"
                                       Grid.Column="0"
                                       Margin="0,0,0,2"
                                       FontSize="24"
                                       Foreground="White"
                                       Padding="0"
                                       Text="{Binding Name,
                                                      Mode=OneWay}"
                                       TextTrimming="CharacterEllipsis"
                                       ToolTip="{Binding Name,
                                                         Mode=OneWay}" />

                            <TextBlock Grid.Row="1"
                                       Grid.Column="0"
                                       Foreground="#AAA"
                                       Padding="0"
                                       Text="{Binding Path,
                                                      Mode=OneWay}"
                                       TextTrimming="CharacterEllipsis"
                                       ToolTip="{Binding Path,
                                                         Mode=OneWay}" />
                        </Grid>

                        <Button Grid.Column="2"
                                Margin="0,0,12,0"
                                VerticalAlignment="Bottom"
                                materialDesign:RippleAssist.IsCentered="True"
                                Focusable="False"
                                IsTabStop="False">
                            <materialDesign:PackIcon Kind="Star" />
                            <Button.Style>
                                <Style BasedOn="{StaticResource MaterialDesignToolButton}" TargetType="{x:Type Button}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding IsHighPriority, Mode=OneWay}" Value="True">
                                            <Setter Property="Foreground" Value="Yellow" />
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding IsHighPriority, Mode=OneWay}" Value="False">
                                            <Setter Property="Foreground" Value="#888" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Button.Style>

                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="Click">
                                    <interactivity:EventToReactiveCommand Command="{Binding FlipHighPriority, Mode=OneTime}" />
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                        </Button>
                    </Grid>
                </DataTemplate>
            </ListBox.ItemTemplate>
        </ListBox>
    </Grid>
</Window>
