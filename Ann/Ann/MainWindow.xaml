<Window x:Class="Ann.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:ann="clr-namespace:Ann"
        xmlns:behaviors="http://schemas.livet-mvvm.net/2011/wpf"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        Title="{Binding Message.Value,
                        Mode=OneWay}"
        Width="800"
        MaxHeight="500"
        AllowsTransparency="True"
        Background="#9000"
        BorderBrush="#C000"
        BorderThickness="1"
        Left="{Binding Left.Value,
                       Mode=TwoWay}"
        Loaded="Window_Loaded"
        MouseLeftButtonDown="Window_MouseLeftButtonDown"
        ResizeMode="NoResize"
        ShowInTaskbar="False"
        SizeToContent="Height"
        SnapsToDevicePixels="True"
        Top="{Binding Top.Value,
                      Mode=TwoWay}"
        Topmost="True"
        Visibility="{Binding Visibility.Value,
                             Mode=TwoWay}"
        WindowStyle="None"
        mc:Ignorable="d">
    <Window.Resources>
        <Style TargetType="ListBoxItem">
            <Setter Property="HorizontalContentAlignment" Value="Stretch" />
            <Setter Property="VerticalContentAlignment" Value="Stretch" />
        </Style>
    </Window.Resources>

    <Window.DataContext>
        <ann:MainWindowViewModel />
    </Window.DataContext>

    <Window.InputBindings>
        <KeyBinding Key="Enter" Command="{Binding RunCommand, Mode=OneTime}" />
        <KeyBinding Key="Escape" Command="{Binding AppHideCommand, Mode=OneTime}" />
        <KeyBinding Key="J"
                    Command="{Binding AppHideCommand,
                                      Mode=OneTime}"
                    Modifiers="Control" />
    </Window.InputBindings>

    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Closed">
            <behaviors:DataContextDisposeAction />
        </i:EventTrigger>

        <behaviors:InteractionMessageTrigger MessageKey="Close" Messenger="{Binding Messenger, Mode=OneTime}">
            <behaviors:WindowInteractionMessageAction InvokeActionOnlyWhenWindowIsActive="False" />
        </behaviors:InteractionMessageTrigger>
    </i:Interaction.Triggers>

    <Grid Margin="16">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>

        <TextBox x:Name="InputTextBox"
                 Grid.Row="1"
                 Background="Transparent"
                 BorderThickness="0"
                 CaretBrush="White"
                 FontFamily="Tahoma"
                 FontSize="40"
                 Foreground="White"
                 Text="{Binding Input.Value,
                                Mode=TwoWay,
                                UpdateSourceTrigger=PropertyChanged}">
            <TextBox.InputBindings>
                <KeyBinding Key="Up"
                            Command="{Binding SelectedCandidateMoveCommand,
                                              Mode=OneTime}"
                            CommandParameter="-1" />
                <KeyBinding Key="Down"
                            Command="{Binding SelectedCandidateMoveCommand,
                                              Mode=OneTime}"
                            CommandParameter="1" />

                <KeyBinding Key="Tab"
                            Command="{Binding SelectedCandidateMoveCommand,
                                              Mode=OneTime}"
                            CommandParameter="-1"
                            Modifiers="Shift" />
                <KeyBinding Key="Tab"
                            Command="{Binding SelectedCandidateMoveCommand}"
                            CommandParameter="1" />
            </TextBox.InputBindings>
        </TextBox>

        <StackPanel Grid.Row="1"
                    HorizontalAlignment="Right"
                    VerticalAlignment="Top"
                    Orientation="Horizontal">
            <TextBlock VerticalAlignment="Center"
                       IsHitTestVisible="False"
                       Text="{Binding Message.Value,
                                      Mode=OneWay}" />
            <Button Margin="4,0,0,0"
                    VerticalAlignment="Center"
                    Command="{Binding IndexUpdateCommand,
                                      Mode=OneWay}"
                    Content="Update"
                    Focusable="False"
                    IsEnabled="{Binding CanIndexUpdate.Value}"
                    IsTabStop="False"
                    Padding="4,2" />
            <Button Margin="4,0,0,0"
                    VerticalAlignment="Center"
                    Command="{Binding AppQuitCommand,
                                      Mode=OneWay}"
                    Content="Quit"
                    Focusable="False"
                    IsEnabled="{Binding CanIndexUpdate.Value}"
                    IsTabStop="False"
                    Padding="4,2" />
        </StackPanel>

        <ListBox Grid.Row="2"
                 Margin="0,16,0,0"
                 HorizontalContentAlignment="Stretch"
                 Background="{x:Null}"
                 BorderThickness="0"
                 Focusable="False"
                 IsTabStop="False"
                 ItemsSource="{Binding Candidates.Value,
                                       Mode=OneWay}"
                 ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                 SelectedItem="{Binding SelectedCandidate.Value,
                                        Mode=TwoWay}"
                 SelectionChanged="ListBox_SelectionChanged"
                 SelectionMode="Single"
                 VirtualizingPanel.IsVirtualizing="True"
                 VirtualizingPanel.ScrollUnit="Item"
                 VirtualizingPanel.VirtualizationMode="Recycling">
            <ListBox.Resources>
                <Style TargetType="ListBoxItem">
                    <Setter Property="IsTabStop" Value="False" />
                    <Setter Property="Focusable" Value="False" />
                    <EventSetter Event="MouseMove" Handler="ListBox_MouseMove" />
                    <EventSetter Event="PreviewMouseLeftButtonDown" Handler="ListBox_MouseLeftButtonDown" />
                </Style>
            </ListBox.Resources>

            <ListBox.Style>
                <Style TargetType="{x:Type ListBox}">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding Candidates.Value, Mode=OneWay}" Value="{x:Null}">
                            <Setter Property="Visibility" Value="Collapsed" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Candidates.Value.Length, Mode=OneWay}" Value="0">
                            <Setter Property="Visibility" Value="Collapsed" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </ListBox.Style>

            <ListBox.ItemsPanel>
                <ItemsPanelTemplate>
                    <VirtualizingStackPanel />
                </ItemsPanelTemplate>
            </ListBox.ItemsPanel>

            <ListBox.ItemTemplate>
                <DataTemplate DataType="{x:Type ann:ExecutableUnitViewModel}">
                    <Grid Margin="0,4">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>

                        <Grid.ContextMenu>
                            <ContextMenu>
                                <MenuItem Header="High Priority"
                                          IsCheckable="True"
                                          IsChecked="{Binding IsHighPriority,
                                                              Mode=TwoWay}" />
                            </ContextMenu>
                        </Grid.ContextMenu>

                        <TextBlock Grid.Row="0"
                                   Grid.Column="1"
                                   Margin="0,0,0,2"
                                   FontFamily="Tahoma"
                                   FontSize="24"
                                   Foreground="White"
                                   Padding="0"
                                   Text="{Binding Name,
                                                  Mode=OneWay}" />

                        <TextBlock Grid.Row="1"
                                   Grid.Column="1"
                                   FontFamily="Tahoma"
                                   FontWeight="ExtraLight"
                                   Foreground="#AAA"
                                   Padding="0"
                                   Text="{Binding Path,
                                                  Mode=OneWay}" />
                    </Grid>
                </DataTemplate>
            </ListBox.ItemTemplate>
        </ListBox>
    </Grid>
</Window>
